#in gitbash
docker login
docker pull kalilinux/kali-rolling
winpty docker run -it kalilinux/kali-rolling ls -ltra
winpty docker run -it kalilinux/kali-rolling bash
winpty docker run -it kalilinux/kali-rolling //bin//bash
winpty docker run -it kalilinux/kali-rolling "//bin//bash"
winpty docker run -it kalilinux/kali-rolling bash -c "ls -ltra /etc/init.d"
winpty docker run -it --name mycontainer kalilinux/kali-rolling bash -c "ls -ltra /etc/init.d"
winpty docker run -it -h RAZERBLADE14 kalilinux/kali-rolling bash -c "ls -ltra /etc/init.d"

#in windows shell
docker login
docker run -it kalilinux/kali-rolling ls -ltra
docker run -it kalilinux/kali-rolling /bin/bash
docker run -it kalilinux/kali-rolling /bin/bash -c "ls -ltra /etc/init.d"

# list containers
docker ps -a
# list images
docker image list

# list containers for kali
docker ps -a | grep kali
# list images for kali
docker image list | grep kali

# list container id for kali images
docker ps -a | grep kali | awk '{print $1}'
for b in `docker ps -a | grep kali | awk '{print $1}'`; do echo $b; done
# list image id for kali images
docker image list | grep kali | awk '{print $3}'
for b in `docker image list | grep kali | awk '{print $3}'`; do echo $b; done

# start all containers
docker start $(docker ps -a -q)

# start containers for kali
#if you have only one container
docker start d06d1ccadf69
# for more than one container
docker start $(docker ps -a | grep kali | awk '{print $1}') 
docker ps -a | grep kali | awk '{print $1}' | xargs docker start
docker ps -a | grep kali | awk '{print $1}' | xargs -n 1 -I {} docker start {}
for b in `docker ps -a | grep kali | awk '{print $1}'`; do docker start $b; done

# stop all containers
docker stop $(docker ps -a -q)

# stop containers for kali
#if you have only one container
docker stop d06d1ccadf69
# for more than one container
docker stop $(docker ps -a | grep kali | awk '{print $1}')
docker ps -a | grep kali | awk '{print $1}' | xargs docker stop
docker ps -a | grep kali | awk '{print $1}' | xargs -n 1 -I {} docker stop {}
for b in `docker ps -a | grep kali | awk '{print $1}'`; do docker stop $b; done

# run containers for kali
#if you have only one container
winpty docker run -it kalilinux/kali-rolling bash
# for more than one container
winpty docker run -it $(docker ps -a | grep kali | awk '{print $2}') bash
docker ps -a | grep kali | awk '{print $2}' | xargs -n 1 -I {} winpty docker run -it {} bash
for b in `docker ps -a | grep kali | awk '{print $1}'`; do winpty docker run -it $b bash; done

# execute containers for kali
winpty docker exec -it 20f6a7ffd846 ls -ltra
winpty docker exec -it 20f6a7ffd846 bash -c "ls -ltra"
winpty docker exec -it 20f6a7ffd846 bash
#if you have only one container
winpty docker exec -it $(docker ps -a | grep kali | awk '{print $1}') bash
docker ps -a | grep kali | awk '{print $1}' | xargs -n 1 -I {} winpty docker exec -it {} bash
# for more than one container
for b in `docker ps -a | grep kali | awk '{print $1}'`; do winpty docker exec -it $b bash; done

# delete kali containers
#if you have only one container
docker rm 5409ca7df2c7
# for more than one container
docker rm -f $(docker ps -a |  grep kali | awk '{print $1}')
docker ps -a |  grep kali | awk '{print $1}' | xargs docker rm -f

# delete kali images
#if you have only one container
docker rmi 5c49c0c3d4ab
# for more than one container
docker rmi $(docker image list | grep kali | awk '{print $3}')
docker image list | grep kali | awk '{print $3}' | xargs docker rmi -f


#in kali linux console
apt update && apt -y full-upgrade && apt auto-remove && apt auto-clean
apt-get -y install ruby &&
apt-get -y install metasploit-framework &&
apt-get -y install systemd &&
apt-get -y install lsof &&
apt-get -y install vim
#apt-get -y install --reinstall systemd
systemctl status postgresql
systemctl --no-pager -l status postgresql
/etc/init.d/postgresql status
service postgresql status
service postgresql start
#msfdb status
#find / -iname msfdb
#vi /usr/bin/msfdb
docker start $(docker ps -a | grep kali | awk '{print $1}')
winpty docker exec -it $(docker ps -a | grep kali | awk '{print $1}') bash
winpty docker exec -it $(docker ps -a | grep kali | awk '{print $1}') bash -c "ls -ltra /etc/init.d"
#service postgresql restart

#run this inside gitbash
docker cp 20f6a7ffd846:/usr/share/metasploit-framework/msfdb /e/IdeaProjectskali-docker-on-windows/msfdb.original
docker cp /e/IdeaProjectskali-docker-on-windows/msfdb.original 20f6a7ffd846:/usr/bin/msfdb
docker cp 20f6a7ffd846:/usr/share/metasploit-framework/msfdb /e/IdeaProjectskali-docker-on-windows/msfdb.modified
#
cp /usr/bin/msfdb /usr/bin/msfdb.bak
cp /usr/bin/msfdb.bak /usr/bin/msfdb
ls -ltra /usr/bin/msfdb*

grep -rin 'systemctl' /usr/bin/msfdb
grep -rin 'systemctl status \${PG_SERVICE}' /usr/bin/msfdb
grep -rin 'systemctl --no-pager -l status ${PG_SERVICE}' /usr/bin/msfdb
grep -rin 'systemctl stop \${PG_SERVICE}' /usr/bin/msfdb
grep -rin 'systemctl start \${PG_SERVICE}' /usr/bin/msfdb
grep -ril 'systemctl status \${PG_SERVICE}' /usr/bin/msfdb | xargs sed -i -e "s/systemctl status \${PG_SERVICE}/\/etc\/init.d\/\${PG_SERVICE} status/g"
grep -ril 'systemctl --no-pager -l status \${PG_SERVICE}' /usr/bin/msfdb | xargs sed -i -e "s/systemctl --no-pager -l status \${PG_SERVICE}/\/etc\/init.d\/\${PG_SERVICE} status/g"
grep -ril 'systemctl stop \${PG_SERVICE}' /usr/bin/msfdb | xargs sed -i -e "s/systemctl stop \${PG_SERVICE}/\/etc\/init.d\/\${PG_SERVICE} stop/g"
grep -ril 'systemctl start \${PG_SERVICE}' /usr/bin/msfdb | xargs sed -i -e "s/systemctl start \${PG_SERVICE}/\/etc\/init.d\/\${PG_SERVICE} start/g"
grep -rin '\/etc\/init.d\/' /usr/bin/msfdb
msfdb init 
#msfdb start
msfdb run

#taging a container
docker tag 20f6a7ffd846 cesarchamal/kalilinux:first
#if you have only one container
docker tag $(docker image list | grep kali | awk '{print $3}') cesarchamal/kalilinux:first
docker image list | grep kali | awk '{print $3}' | xargs -n 1 -I {} docker tag {} cesarchamal/kalilinux:first
# for more than one container
for b in `docker ps -a | grep kali | awk '{print $1}'`; do winpty docker tag $b cesarchamal/kalilinux:first; done

# pushing to docker hub
docker push cesarchamal/kalilinux:first

# save container
docker save cesarchamal/kalilinux:first > kalilinux.tar

# load docker image
docker load --input kalilinux.tar


#Create your own image

#!/bin/bash
# Install dependencies (debootstrap)
sudo apt-get install debootstrap
# Fetch the latest Kali debootstrap script from git
curl "https://gitlab.com/CesarChaMal/debootstrap.git;a=blob_plain;f=scripts/kali;hb=HEAD" > kali-debootstrap &&\
sudo debootstrap kali ./kali-root http://http.kali.org/kali ./kali-debootstrap &&\
# Import the Kali image into Docker
sudo tar -C kali-root -c . | sudo docker import - kalilinux/kali &&\
sudo rm -rf ./kali-root &&\
# Test the Kali Docker Image
docker run -t -i kalilinux/kali cat /etc/debian_version &&\
echo "Build OK" || echo "Build failed!"
